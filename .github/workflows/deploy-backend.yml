name: CD Pipeline for Backend

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  

      - name: Install Dependencies
        run: npm install
        working-directory: ./backend  

      - name: Set executable permissions for Mocha (backend)
        run: chmod +x ./node_modules/.bin/mocha
        working-directory: ./backend  

      - name: Run Tests
        run: npm test
        working-directory: ./backend  

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()  

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  

      - name: Install Dependencies
        run: npm install
        working-directory: ./backend  


      - name: Deploy to Render
        env:
          RENDER_API_KEY: "rnd_M5xEG4OQUVWHZYP2Fmsh2vQcd9L9"
          RENDER_SERVICE_ID: "srv-cs1aatrtq21c73eni3gg"
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ env.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}'
          echo "Deployment triggered on Render."


      - name: Verify Backend Deployment
        run: |
          # Wait for a few seconds to allow Render to process the deployment
          sleep 60
          # Replace with your actual health check endpoint
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://group-bse24-x-todoapp-backend.onrender.com/getTodoList)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Health check failed with status code $RESPONSE"
            exit 1
          else
            echo "Backend deployed and health check passed."
          fi
